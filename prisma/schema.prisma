

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String?
  createdAt DateTime @default(now())

  bikes     Bike[]
}

model Bike {
  id             Int      @id @default(autoincrement())
  userId         Int
  brand          String
  model          String
  registrationNo String   @unique
  purchaseDate   DateTime?
  createdAt      DateTime @default(now())

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  services Service[]
}

model ServiceCenter {
  id        Int      @id @default(autoincrement())
  name      String
  address   String?
  phone     String?
  createdAt DateTime @default(now())

  services  Service[]
}

model Service {
  id             Int       @id @default(autoincrement())
  bikeId         Int
  centerId       Int?
  serviceDate    DateTime
  odometerReading Int?
  remarks        String?
  createdAt      DateTime  @default(now())

  bike        Bike          @relation(fields: [bikeId], references: [id], onDelete: Cascade)
  serviceCenter ServiceCenter? @relation(fields: [centerId], references: [id], onDelete: SetNull)
  items       ServiceItem[]
}

model ServiceItem {
  id        Int      @id @default(autoincrement())
  serviceId Int
  itemName  String
  cost      Float    @default(0.0)
  status    String   @default("Completed")

  service   Service  @relation(fields: [serviceId], references: [id], onDelete: Cascade)
}
